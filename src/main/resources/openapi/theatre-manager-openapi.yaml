openapi: 3.0.3
info:
  title: Theatres Management service APIs
  description: |-
    Theatres Management service API specifications
  version: 1.0.0
servers:
  - url: '{protocol}://{server}{basePath}'
    description: Open API
    variables:
      protocol:
        enum:
          - 'http'
        default: 'http'
      server:
        enum:
          - 'http://localhost:8080'
        default: 'http://localhost:8080'
      basePath:
        enum:
          - '/api/theatres'
        default: '/api/theatres'
tags:
  - name: TheatresManagement
    description: Theatres Management API
paths:
  '/v1/addTheatre':
    post:
      tags:
        - TheatresManagement
      summary: Add theatre
      description: Add a new theatre into system
      operationId: addTheatre
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTheatreRequest'
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddTheatreResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/v1/getTheatre/{id}':
    get:
      tags:
        - TheatresManagement
      summary: Get theatre by id
      description: Get a theatre by id
      operationId: getTheatreById
      parameters:
        - required: true
          in: path
          name: id
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddTheatreResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
    Unauthorized:
      description: Unauthorized request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
    Conflict:
      description: conflict in the request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
  schemas:
    ApiError:
      type: object
      properties:
        code:
          type: integer
          example: 1001
          description: "Internal error code or HTTP error code"
        message:
          type: string
          example: "deviceId must not be null"
          description: "error message"
        error:
          type: string
          example: "Resource Not Found"
          description: "HTTP error description"
    AddTheatreRequest:
      type: object
      required:
        - name
        - city
        - screens-count
        - screens
      properties:
        name:
          type: string
          example: "Sathyam"
        city:
          type: string
          example: "Chennai"
        screens-count:
          type: integer
        screens:
          items:
            $ref: "#/components/schemas/screenInfo"
    screenInfo:
      type: object
      required:
        - name
        - seats-capacity
      properties:
        name:
          type: string
          example: "screen-1"
        seats-capacity:
          type: integer
    screenResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: "screen-1"
        seats-capacity:
          type: integer
    AddTheatreResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: "Sathyam"
        city:
          type: string
          example: "Chennai"
        screens:
          items:
            $ref: "#/components/schemas/screenResponse"